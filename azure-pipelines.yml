
variables:
  vmImage: 'ubuntu-latest'
  javaHome: 'JDKVersion'
  mavenOptions: '-Xmx3072m'
  jdkVersion: '1.8'
  pomFilePath: 'pom.xml'
  webFolder: klient-web/src/main

stages:
### BUILD ###
- stage: Build
  pool:
      vmImage: $(vmImage)
  jobs:
# COMPILE
  - job: compile
    displayName: compile
    steps:
    ## Compile web components
    - task: Npm@1
      name: npm_install
      displayName: npm install
      inputs:
        workingDir: $(webFolder)
        command: install
    - task: CmdLine@2
      name: bower_install
      displayName: bower install
      inputs:
        script: 'bower install'
        workingDirectory: $(webFolder)
    - task: Grunt@0
      name: grunt_compile
      displayName: grunt build compile
      inputs:
        gruntFile: Gruntfile.js
        targets: build compile
        workingDirectory: $(webFolder)
        gruntCli: 'node_modules/grunt-cli/bin/grunt'
    ## Compile maven project
    - task: Maven@3
      name: maven_compile
      displayName: maven compile
      inputs:
        mavenPomFile: $(pomFilePath)
        mavenOptions: $(mavenOptions)
        javaHomeOption: $(javaHome)
        jdkVersionOption: $(jdkVersion)
        publishJUnitResults: false
        goals: 'compile'
# TEST
  - job: test
    displayName: test
    dependsOn:
      - compile
    condition: and(succeeded(), ne(variables['SKIP_TESTS'], 'true'))
    steps:
    - task: Maven@3
      name: maven_test
      displayName: maven test
      inputs:
        mavenPomFile: $(pomFilePath)
        mavenOptions: $(mavenOptions)
        javaHomeOption: $(javaHome)
        jdkVersionOption: $(jdkVersion)
        jdkArchitectureOption: 'x64'
        publishJUnitResults: false
        # Exclude the 'tjeneste' module from testing, relies on external config
        goals: 'test  -pl !tjeneste'
### STAGING ###
- stage: Staging
  dependsOn: Build
  condition: and(succeeded(), or(eq(variables['Build.SourceBranchName'], 'dev'), eq(variables['Build.SourceBranchName'], 'master')))
  jobs:
  - job: package_and_stage
    displayName: package and stage
    pool:
      vmImage: $(vmImage)
    steps:
    - task: Maven@3
      displayName: maven package
      inputs:
        mavenPomFile: $(pomFilePath)
        mavenOptions: $(mavenOptions)
        javaHomeOption: $(javaHome)
        jdkVersionOption: $(jdkVersion)
        publishJUnitResults: false
        goals: package
    - task: CopyFiles@2
      inputs:
        sourceFolder: $(Agent.BuildDirectory)
        TargetFolder: $(Build.ArtifactStagingDirectory)

    - task: PublishBuildArtifacts@1
      inputs:
        PathtoPublish: $(Build.ArtifactStagingDirectory)
        ArtifactName: 'nhareg_artifact'